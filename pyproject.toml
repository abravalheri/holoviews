[build-system]
requires = [
    "param >=1.7.0",
    "pyct >=0.4.4",
    "setuptools>=61.2",
]
build-backend = "setuptools.build_meta"

[project]
name = "holoviews"
readme = "README.md"
authors = [{name = "Jean-Luc Stevens and Philipp Rudiger", email = "holoviews@gmail.com"}]
maintainers = [{name = "HoloViz Developers", email = "developers@pyviz.org"}]
license = {text = "BSD"}
description = "Stop plotting your data - annotate your data and let it visualize itself."
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Framework :: Matplotlib",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
]
requires-python = ">=3.7"
dependencies = [
    "param >=1.9.3,<2.0",
    "numpy >=1.0",
    "pyviz_comms >=0.7.4",
    "panel >=0.13.1",
    "colorcet",
    "packaging",
    "pandas >=0.20.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://www.holoviews.org"
Source = "https://github.com/holoviz/holoviews"

[project.optional-dependencies]
lint = [
    "ruff",
    "pre-commit",
]
tests_core = [
    # Test requirements
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "flaky",
    "matplotlib >=3",
    "nbconvert",
    "bokeh",
    "pillow",
    "plotly >=4.0",
    "dash >=1.16",
    "codecov",
    "ipython >=5.4.0",
    # Issues with comm (see https://github.com/ipython/ipykernel/issues/1026)
    "ipykernel <6.18.0",
]
tests = [
    # Optional tests dependencies, i.e. one should be able
    # to run and pass the test suite without installing any
    # of those.
    "holoviews[tests_core]",
    "dask",
    "ibis-framework", # Mapped to ibis-sqlite in setup.cfg for conda
    "xarray >=0.10.4",
    "networkx",
    "shapely",
    "ffmpeg",
    "cftime",
    "scipy",
    "selenium",
    "numpy <1.24", # Upper pin because of numba error
    # Packages not working on python 3.11 because of numba
    "spatialpandas; python_version < '3.11'",
    "datashader >=0.11.1; python_version < '3.11'",
]
tests_gpu = [
    "holoviews[tests]",
    "cudf",
]
tests_nb = ["nbval"]
notebook = [
    # Notebook dependencies
    "ipython >=5.4.0",
    "notebook",
]
recommended = [
    # IPython Notebook + pandas + matplotlib + bokeh
    "holoviews[notebook]",
    "matplotlib >=3",
    "bokeh >=2.4.3",
]
examples = [
    # Requirements to run all examples
    "holoviews[recommended]",
    "networkx",
    "pillow",
    "xarray >=0.10.4",
    "plotly >=4.0",
    "dash >=1.16",
    "streamz >=0.5.0",
    "ffmpeg",
    "cftime",
    "netcdf4",
    "dask",
    "scipy",
    "shapely",
    "scikit-image",
    "pyarrow",
    "pooch",
    "numpy <1.24", # Upper pin because of numba error
    # Packages not working on python 3.11 because of numba
    "datashader >=0.11.1; python_version < '3.11'",
]
examples_tests = [
    "holoviews[examples]",
    "holoviews[tests_nb]",
]
extras = [
    # Extra third-party libraries
    "holoviews[examples]",
    "pscript ==0.7.1",
]
unit_tests = [
    # Not used in tox.ini or elsewhere, kept for backwards compatibility.
    "holoviews[examples]",
    "holoviews[tests]",
    "holoviews[lint]",
]
doc = [
    "holoviews[examples]",
    "nbsite ==0.8.0rc2",
    "mpl_sample_data >=3.1.3",
    "pscript",
    "graphviz",
    "bokeh >2.2",
    "pydata-sphinx-theme ==0.9.0",
    "sphinx-copybutton",
    "pooch",
    "selenium",
]
all = [
    "holoviews[lint]",
    "holoviews[tests]",
    "holoviews[tests_gpu]",
    "holoviews[tests_nb]",
    "holoviews[notebook]",
    "holoviews[recommended]",
    "holoviews[examples]",
    "holoviews[extras]",
    "holoviews[doc]",
]
build = [
    "param >=1.7.0",
    "setuptools>=61.2",
    "pyct >=0.4.4",
]

[project.scripts]
holoviews = "holoviews.util.command:main"

[tool.setuptools]
license-files = ["LICENSE.txt"]
platforms = ["Windows", "Mac OS X", "Linux"]

[tool.pytest.ini_options]
addopts = "-p no:dash"
filterwarnings = [
    # Numpy warning triggered in Bokeh, when timedelta or datetime numpy scalar are compared to a numerical scalar
    "ignore:elementwise comparison failed:DeprecationWarning:bokeh.core.property.bases",
    "ignore:dropping variables using `drop` will be deprecated; using drop_vars is encouraged:PendingDeprecationWarning:xarray.core.dataarray",
    # 2022-12: Plotly don't use packagings version yet
    "ignore:distutils Version classes are deprecated:DeprecationWarning:plotly.graph_objs",
    # 2022-12: A weird warning which could be related to Datashader
    "ignore:Please use `append` from the:DeprecationWarning:pickle",
    # 2022-12: Warnings which should be fixed in Panel
    "ignore:make_current is deprecated; start the event loop first:DeprecationWarning:panel.io.server",
    # 2023-01: Numpy 1.24 warnings
    "ignore:`.+?` is a deprecated alias for `.+?`.:DeprecationWarning:bokeh",  # https://github.com/bokeh/bokeh/pull/12690
    "ignore:`.+?` is a deprecated alias for `.+?`.:DeprecationWarning:cupy",  # https://github.com/cupy/cupy/pull/7245
    "ignore:`.+?` is a deprecated alias for `.+?`.:DeprecationWarning:plotly.express.imshow_utils",  # https://github.com/plotly/plotly.py/pull/3997
    "ignore:`.+?` is a deprecated alias for `.+?`.:DeprecationWarning:skimage.util.dtype",  # https://github.com/scikit-image/scikit-image/pull/6637
    # 2023-01: Sqlalchemy 2.0 warning:
    "ignore: Deprecated API features detected:DeprecationWarning:ibis.backends.base.sql.alchemy",  # https://github.com/ibis-project/ibis/issues/5048
]

[tool.ruff]
target-version = "py37"

select = [
    "E",
    "F",
    "ICN",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "RUF",
    "UP",
    "W",
]

ignore = [
    "E402",     # Module level import not at top of file
    "E501",     # Line too long
    "E712",     # Comparison to true should be is
    "E731",     # Do not assign a lambda expression, use a def
    "E741",     # Ambiguous variable name
    "F405",     # From star imports
    "PLR2004",  # Magic value used in comparison
    "RUF005",   # Consider {expr} instead of concatenation
    "PLR091",   # Too many arguments/branches/statements
    "PLE0604",  # Invalid object in `__all__`, must contain only strings
    "PLE0605",  # Invalid format for __all__
    "E701",     # Multiple statements on one line
]

fix = true
unfixable = [
    "F401",     # Unused imports
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F403"]
"holoviews/tests/*" = ["RUF001", "RUF002", "RUF003"]  # Ambiguous unicode character
